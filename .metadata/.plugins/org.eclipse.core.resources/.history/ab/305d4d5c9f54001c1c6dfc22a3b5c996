package idat.edu.pe.daa2.jpa.controladores;

import java.util.HashMap;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import idat.edu.pe.daa2.jpa.modelo.Categoria;
import idat.edu.pe.daa2.jpa.repositorio.CategoriaRepositorio;
import idat.edu.pe.daa2.jpa.servicio.CategoriaServicio;

@RestController
@RequestMapping("/categoria")
public class CategoriaWebController {
	@Autowired
	private CategoriaRepositorio categoriaRepositorio;

	@GetMapping("/listarTodo")
	public List<Categoria> listarCategoria() {
		List<Categoria> listaCategoria = new ArrayList<>();
		Iterator<Categoria> it = categoriaRepositorio.findAll().iterator();
		while (it.hasNext()) {
			listaCategoria.add(it.next());
		}
		return listaCategoria;
	}

	@PostMapping("/nuevo")
	public Categoria nuevoCategoria(@Valid @RquestBody Categoria categoria) {
		Categoria categoria = new Categoria();
		model.addAttribute("categoria", categoria);		
		return "/moduloCategoria/nuevoCategoria";
	}
	/*
	@RequestMapping(value = "/guardar" , method = RequestMethod.POST)
	public String crearCategoria(@ModelAttribute("categoria") Categoria categoria) {
		 servicio.crear(categoria);
	    return "redirect:/categoria/listarTodo";
	}
	
	@RequestMapping(value = "/actualizar/{id}")
	public ModelAndView editarCategoria(@PathVariable(name = "id") int id) {
	    ModelAndView mav = new ModelAndView("/moduloCategoria/editarCategoria");
	    Categoria categoria = servicio.buscarPorID(id);
	    mav.addObject("categoria", categoria);
	    return mav;
	}
	
	@RequestMapping(value = "/eliminar/{id}")
	public String eliminarCategoria(@PathVariable(name = "id") int id) {
		servicio.borrarPorID(id);
	    return "redirect:/categoria/listarTodo";       
	}*/
}
